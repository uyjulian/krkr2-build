name: CI

on:
  push:
    branches: [ test_ci ]
  pull_request:
    branches: [ test_ci ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    container: node:16-buster-slim
    defaults:
      run:
        shell: bash
    steps:
    - name: Upgrade packages
      run: |
        apt-get update 1>&2
        apt-get upgrade -y 1>&2
    - name: Install git
      run: |
        apt-get install git -y
    - name: Install archive dependencies
      run: |
        apt-get install gzip bzip2 zstd openssl tar curl -y 1>&2
    - name: Install Wine
      run: |
        dpkg --add-architecture i386 1>&2
        apt-get update 1>&2
        apt-get upgrade -y 1>&2
        apt-get -o apt::install-recommends=true install wine wine32 wine64 wine64-tools fonts-wine -y 1>&2
    - name: Install display dependencies
      run: |
        apt-get install xvfb libgl1-mesa-glx libgl1-mesa-glx:i386 libgl1:i386 libglx-mesa0:i386 libgl1-mesa-dri:i386 unzip fonts-liberation openbox x11-utils -y 1>&2
    - name: Setup display environment
      run: |
        Xvfb :2 & 1>&2
        export DISPLAY=:2
        while ! xdpyinfo; do sleep 1; jobs 1 || exit 1; done
        openbox & 1>&2
        echo "DISPLAY=:2" >> "$GITHUB_ENV"
    - name: Setup Wine environment
      run: |
        mkdir -p "$RUNNER_TEMP/mypfx"
        echo "WINEPREFIX=$RUNNER_TEMP/mypfx/wpfx" >> "$GITHUB_ENV"
        echo "WINEDLLOVERRIDES=mscoree,mshtml=" >> "$GITHUB_ENV"
    - name: Setup Wine
      run: |
        wineboot -e
        wineserver -k
        wineserver -p
        ln -s $(pwd) $WINEPREFIX/dosdevices/h:
        wineboot
        wine reg add "HKCU\Software\Wine\WineDbg" /v ShowCrashDialog /t REG_DWORD /d 0 /f
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
          submodules: recursive
    - name: Download and unpack toolchain
      run: |
        mkdir t
        cd t
        curl -LOC - https://github.com/uyjulian/krkr2-build/releases/download/assets/kirikiri2_toolchain_cxx.tar.zst.encrypted
        openssl enc -d -aes-256-cbc -md md5 -pass pass:for_kirikiri2_compile -in ./kirikiri2_toolchain_cxx.tar.zst.encrypted | tar --zstd -x
    - name: Copy updated scripts
      run: |
        cp -t t scripts/*
    - name: Prepare toolchain
      run: |
        cd t
        bash config.sh
        bash fixreg.sh
        bash install.sh
    - name: Build static VCL multithread RTL
      run: |
        cd t/instroot/Borland/CBuilder/Source/RTL
        wine make -DMT -DMAGIC all
    - name: Copy static VCL multithread RTL
      run: |
        mv t/instroot/Borland/CBuilder/Source/RTL/lib/psdk t/instroot/Borland/CBuilder/Source/RTL/lib/PSDK
        cp -f -r t/instroot/Borland/CBuilder/Source/RTL/lib/ t/instroot/Borland/CBuilder/Lib
    - name: Download and unpack Boost
      run: |
        curl -LOC - http://sourceforge.net/projects/boost/files/boost/1.30.0/boost_1_30_0.tar.bz2
        mkdir boost
        cd boost
        tar -xjf ../boost_1_30_0.tar.bz2
    - name: Compile boost
      run: |
        cd boost/boost_1_30_0/libs/regex/build
        wine make -f bcb5.mak
    - name: Copy boost
      run: |
        mkdir -p libs
        cp -f -r boost/boost_1_30_0/libs/regex/build/bcb5/ t/instroot/Borland/CBuilder/Lib
        cp -f -r boost/boost_1_30_0/boost/ t/instroot/Borland/CBuilder/Include/boost
    - name: Download and unpack erinalib
      run: |
        curl -LOC - https://github.com/uyjulian/krkr2-build/releases/download/assets/erinalib_krkr2.tar.zst
        mkdir erinalib
        cd erinalib
        tar --zstd -xf ../erinalib_krkr2.tar.zst
    - name: Compile erinalib
      run: |
        cd erinalib
        wine bpr2mak -tdeflib.bmk liberina.bpr
        wine make -f liberina.mak
    - name: Copy erinalib
      run: |
        cp -f -t t/instroot/Borland/CBuilder/Lib erinalib/liberina.lib
        cp -f -r erinalib/library/include/ t/instroot/Borland/CBuilder/Include/erina
    - name: Download and unpack jpeg2
      run: |
        curl -LOC - https://github.com/uyjulian/krkr2-build/releases/download/assets/jpeg2_krkr2.tar.zst
        mkdir jpeg2
        cd jpeg2
        tar --zstd -xf ../jpeg2_krkr2.tar.zst
    - name: Compile jpeg2
      run: |
        cd jpeg2
        wine bpr2mak -tdeflib.bmk libjpeg2.bpr
        wine make -f libjpeg2.mak
    - name: Copy jpeg2
      run: |
        cp -f -t t/instroot/Borland/CBuilder/Lib jpeg2/libjpeg2.lib
        mkdir -p t/instroot/Borland/CBuilder/Include/libjpeg2
        cp -f -t t/instroot/Borland/CBuilder/Include/libjpeg2 jpeg2/ijg/{cderror.h,cdjpeg.h,jchuff.h,jconfig.h,jdct.h,jdhuff.h,jerror.h,jinclude.h,jmemsys.h,jmorecfg.h,jpegint.h,jpeglib.h,jversion.h,transupp.h}
    - name: Download and unpack zlib
      run: |
        curl -LOC - https://github.com/uyjulian/krkr2-build/releases/download/assets/zlib_krkr2.tar.zst
        mkdir zlib
        cd zlib
        tar --zstd -xf ../zlib_krkr2.tar.zst
    - name: Compile zlib
      run: |
        cd zlib
        wine bpr2mak -tdeflib.bmk zlib.bpr
        wine make -f zlib.mak
    - name: Copy zlib
      run: |
        cp -f -t t/instroot/Borland/CBuilder/Lib zlib/zlib.lib
        mkdir -p t/instroot/Borland/CBuilder/Include/zlib
        cp -f -t t/instroot/Borland/CBuilder/Include/zlib zlib/{zconf.h,zlib.h,zutil.h}
    - name: Download and unpack png
      run: |
        curl -LOC - https://github.com/uyjulian/krkr2-build/releases/download/assets/png_krkr2.tar.zst
        mkdir png
        cd png
        tar --zstd -xf ../png_krkr2.tar.zst
    - name: Compile png
      run: |
        cd png
        wine bpr2mak -tdeflib.bmk deelibpng.bpr
        wine make -f deelibpng.mak
    - name: Copy png
      run: |
        cp -f -t t/instroot/Borland/CBuilder/Lib png/deelibpng.lib
        mkdir -p t/instroot/Borland/CBuilder/Include/libpng
        cp -f -t t/instroot/Borland/CBuilder/Include/libpng png/lpng/{PNG.H,pngasmrd.h,pngconf.h}
    - name: Download and unpack libtomcrypt1
      run: |
        curl -LOC - https://github.com/uyjulian/krkr2-build/releases/download/assets/libtomcrypt1_krkr2.tar.zst
        mkdir libtomcrypt1
        cd libtomcrypt1
        tar --zstd -xf ../libtomcrypt1_krkr2.tar.zst
    - name: Compile libtomcrypt1
      run: |
        cd libtomcrypt1
        wine bpr2mak -tdeflib.bmk libtomcrypt1.bpr
        wine make -f libtomcrypt1.mak
    - name: Copy libtomcrypt1
      run: |
        cp -f -t t/instroot/Borland/CBuilder/Lib libtomcrypt1/libtomcrypt1.lib
        cp -f -r libtomcrypt1/libtomcrypt/src/headers/ t/instroot/Borland/CBuilder/Include/tomcrypt1
    - name: Generate make
      run: |
        cd src
        wine bpr2mak Project2.bpr
    - name: Make
      run: |
        cd src
        wine make -f Project2.mak
    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
          name: Project2-exe
          path: src/Project2.exe

