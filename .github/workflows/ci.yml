name: CI

on:
  push:
    branches: [ test_ci ]
  pull_request:
    branches: [ test_ci ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    container: node:16-buster-slim
    defaults:
      run:
        shell: bash
    steps:
    - name: Upgrade packages
      run: |
        apt-get update 1>&2
        apt-get upgrade -y 1>&2
    - name: Install git
      run: |
        apt-get install git -y
    - name: Install archive dependencies
      run: |
        apt-get install zstd openssl tar curl -y 1>&2
    - name: Install Wine
      run: |
        dpkg --add-architecture i386 1>&2
        apt-get update 1>&2
        apt-get upgrade -y 1>&2
        apt-get -o apt::install-recommends=true install wine wine32 wine64 wine64-tools fonts-wine -y 1>&2
    - name: Install display dependencies
      run: |
        apt-get install xvfb libgl1-mesa-glx libgl1-mesa-glx:i386 libgl1:i386 libglx-mesa0:i386 libgl1-mesa-dri:i386 unzip fonts-liberation openbox x11-utils -y 1>&2
    - name: Setup display environment
      run: |
        Xvfb :2 & 1>&2
        export DISPLAY=:2
        while ! xdpyinfo; do sleep 1; jobs 1 || exit 1; done
        openbox & 1>&2
        echo "DISPLAY=:2" >> "$GITHUB_ENV"
    - name: Setup Wine environment
      run: |
        mkdir -p "$RUNNER_TEMP/mypfx"
        echo "WINEPREFIX=$RUNNER_TEMP/mypfx/wpfx" >> "$GITHUB_ENV"
        echo "WINEDLLOVERRIDES=mscoree,mshtml=" >> "$GITHUB_ENV"
    - name: Setup Wine
      run: |
        wineboot -e
        wineserver -k
        wineserver -p
        wineboot
        wine reg add "HKCU\Software\Wine\WineDbg" /v ShowCrashDialog /t REG_DWORD /d 0 /f
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
          submodules: recursive
    - name: Download and unpack toolchain
      run: |
        mkdir $WINEPREFIX/drive_c/t
        cd $WINEPREFIX/drive_c/t
        curl -LOC - https://github.com/uyjulian/krkr2-build/releases/download/assets/kirikiri2_toolchain_cxx.tar.zst.encrypted
        openssl enc -d -aes-256-cbc -md md5 -pass pass:for_kirikiri2_compile -in ./kirikiri2_toolchain_cxx.tar.zst.encrypted | tar --zstd -x
    - name: Copy updated scripts
      run: |
        cp -t $WINEPREFIX/drive_c/t scripts/*
    - name: Prepare toolchain
      run: |
        cd $WINEPREFIX/drive_c/t
        bash config.sh
        bash fixreg.sh
        bash install.sh
    - name: Build static VCL multithread RTL
      run: |
        cd $WINEPREFIX/drive_c/tt/Borland/CBuilder/Source/RTL
        wine make -DMT -DMAGIC all
    - name: Generate make
      run: |
        cd src
        wine bpr2mak Project2.bpr
    - name: Make
      run: |
        cd src
        wine make -f Project2.mak
    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
          name: Project2-exe
          path: src/Project2.exe

